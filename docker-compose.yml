version: '3'
networks:
  otus-randomization-net
services:
  otus-randomization-db:
    image: bitnami/mongodb:4.0
    container_name: otus-randomization-db
    hostname: otus-randomization-db
    restart: always
    healthcheck:
      test: echo 'db.stats().ok' | mongo localhost:27017/admin --quiet
      interval: 30s
      timeout: 30s
      retries: 5
    ports:
      - 27017:27017
    volumes:
      - ./mongodb/persistence/mongoData:/bitnami/mongodb/data/db
    environment:
      - MONGODB_ROOT_PASSWORD=XRYs9yjU
    networks:
      - otus-randomization-net
  otus-randomization-api:
    build:
      context: nodejs/api
      dockerfile: Dockerfile
    container_name: otus-randomization-api
    restart: always
    depends_on:
      - otus-randomization-db
    links:
      - otus-randomization-db
    ports:
      - 8080:8080
    env_file:
      - ./nodejs/.env
    volumes:
      - ./nodejs/persistence:/src
    networks:
      - otus-randomization-net
  otus-randomization:
    container_name: otus-randomization
    build:
      context: nginx
      dockerfile: Dockerfile
    restart: always
    depends_on:
      - otus-randomization-api
    links:
      - otus-randomization-api
    ports:
      - 80:80
      - 443:443
    networks:
      - otus-randomization-net
